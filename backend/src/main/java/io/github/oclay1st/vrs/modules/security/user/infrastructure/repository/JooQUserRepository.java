package io.github.oclay1st.vrs.modules.security.user.infrastructure.repository;

import org.jooq.DSLContext;
import org.springframework.stereotype.Repository;

import static io.github.oclay1st.vrs.autogenerated.jooq.tables.User.USER;

import io.github.oclay1st.vrs.autogenerated.jooq.tables.records.UserRecord;
import io.github.oclay1st.vrs.modules.security.user.domain.command.RegisterUserCommand;
import io.github.oclay1st.vrs.modules.security.user.domain.repository.UserRepository;

@Repository
public class JooQUserRepository implements UserRepository {

    private final DSLContext client;

    public JooQUserRepository(DSLContext client) {
        this.client = client;
    }

    @Override
    public void create(RegisterUserCommand command) {
        UserRecord userRecord = client.newRecord(USER);
        userRecord.setUsername(command.getUsername());
        userRecord.setPassword(command.getPassword());
        userRecord.setName(command.getName());
        userRecord.setLastName(command.getLastName());
        userRecord.setActive(command.isActive());
        userRecord.setCreatedAt(command.getCreatedAt());
        userRecord.setUpdatedAt(command.getUpdateAt());
        userRecord.store();
    }

    @Override
    public boolean existByUsername(String username) {
        return client.fetchExists(USER, USER.USERNAME.eq(username));
    }

}
